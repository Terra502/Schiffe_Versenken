import java.util.Random;
public class Schiffe {

    Random rand = new Random();
    int x;
    int y;
    int ausrichtung; //0 = Nord, 1 = Ost, 2 = Süd, 3 = West
    boolean pruefen;

    public int[][] schiff_setzten(int[][] spielfeld, int groeße) {
        pruefen = true;
        while (pruefen) {
            x = randomFeld(7);
            y = randomFeld(7);
            ausrichtung = randomFeld(4);
            if (spielfeld[x][y] != 0) {
                while (spielfeld[x][y] != 0) {
                    x = randomFeld(7);
                    y = randomFeld(7);
                }
            }
            if (ueberpruefen(x, y, ausrichtung, groeße, spielfeld)) {
                if (ausrichtung == 0) {
                    for (int i = 0; i < groeße; i++) {
                        spielfeld[x][y - i] = groeße;
                    }
                }
                if (ausrichtung == 1) {
                    for (int i = 0; i < groeße; i++) {
                        spielfeld[x + i][y] = groeße;
                    }
                }
                if (ausrichtung == 2) {
                    for (int i = 0; i < groeße; i++) {
                        spielfeld[x][y + i] = groeße;
                    }
                }
                if (ausrichtung == 3) {
                    for (int i = 0; i < groeße; i++) {
                        spielfeld[x - i][y] = groeße;
                    }
                }
                pruefen = false;
            }
        }
        return spielfeld;
    }

    public boolean ueberpruefen(int _x, int _y, int _ausrichtung, int _groeße, int[][] _spielfeld) {
        if (_ausrichtung == 0) {
            for (int i = 1; i < _groeße + 1; i++) {
                if (_y - i < 0 || _spielfeld[_x][_y - i] != 0) {
                    return false;
                }
            }
        }
        if (_ausrichtung == 1) {
            for (int i = 1; i < _groeße + 1; i++) {
                if (_x + i > 6 || _spielfeld[_x + i][_y] != 0) {
                    return false;
                }
            }
        }
        if (_ausrichtung == 2) {
            for (int i = 1; i < _groeße + 1; i++) {
                if (_y + i > 6 || _spielfeld[_x][_y + i] != 0) {
                    return false;
                }
            }
        } else {
            for (int i = 1; i < _groeße + 1; i++) {
                if (_x - i < 0 || _spielfeld[_x - i][_y] != 0) {
                    return false;
                }
            }
        }
        return true;
    }

    public int randomFeld(int bound) {
        return rand.nextInt(bound);
    }
}
